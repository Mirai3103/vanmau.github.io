{"version":3,"sources":["../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","pages/StorePage.js"],"names":["generateUtilityClasses","styled","Typography","shouldForwardProp","prop","rootShouldForwardProp","name","slot","overridesResolver","props","styles","root","StorePage","AuthData","useContext","AuthContext","StoreContext","data","state","dispatch","themeStretch","useSettings","useState","expanded","setExpanded","navigate","useNavigate","React","useEffect","undefined","user","uid","likedDocument","length","axios","post","BASE_URL","documentsId","then","res","setData","catch","err","console","log","isShowDontHave","title","style","marginBottom","maxWidth","sx","color","spacing","direction","className","map","mapDoc","panel","event","isExpanded"],"mappings":"2PAIiCA,YAAuB,uBAAwB,CAAC,S,KCmBnDC,YAAOC,IAAY,CAC/CC,kBAAmB,SAAAC,GAAI,OAAIC,YAAsBD,IAAkB,YAATA,GAC1DE,KAAM,uBACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,OAJjBV,CAK3B,I,qQCfY,SAASW,IACtB,IAAMC,EAAWC,qBAAWC,KAC5B,cAA0BD,qBAAWE,KAAcC,KAAnD,GAAOC,EAAP,KAAcC,EAAd,KACQC,EAAiBC,cAAjBD,aACR,EAAgCE,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAIMC,EAAWC,cACjBC,IAAMC,WAAU,WAgBd,YAf0BC,IAAtBhB,EAASiB,KAAKC,KAChBN,EAAS,eAEyBI,IAAhChB,EAASiB,KAAKE,eAAsE,IAAvCnB,EAASiB,KAAKE,cAAcC,QAC3EC,IACGC,KADH,UACWC,IADX,kBACqC,CACjCC,YAAaxB,EAASiB,KAAKE,gBAE5BM,MAAK,SAACC,GACLpB,EAASqB,YAAQD,EAAItB,UAEtBwB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGX,WACLvB,EAASqB,YAAQ,QAElB,CAACrB,EAAUN,IACd,IAAIgC,GAAiB,EAIrB,OAFEA,OADkChB,IAAhChB,EAASiB,KAAKE,eAE6C,IAAvCnB,EAASiB,KAAKE,cAAcC,OAElD,eAAC,IAAD,CAAMa,MAAM,iCAAZ,UACE,oBAAIC,MAAO,CAAEC,aAAc,QAA3B,yBACA,cAAC,IAAD,CAAWC,UAAU7B,GAAuB,KAA5C,SAEGyB,EACC,gGACoBhB,IAAlBX,EAAMD,KAAK,GACb,cAAC,IAAD,CAAOiC,GAAI,CAAEC,MAAO,YAAcC,QAAS,EAAGC,UAAU,MAAMC,UAAU,kBAAxE,SACE,cAAC,IAAD,CAAkBH,MAAM,gBAG1BjC,EAAMD,KAAKsC,IAAIC,YAAOjC,GAxCT,SAACkC,GAAD,OAAW,SAACC,EAAOC,GACtCnC,IAAYmC,GAAaF,MAuC2B5C,EAAUK","file":"static/js/6.c0e61405.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","import React, { useContext, useState } from 'react';\nimport { CircularProgress, Container, Stack } from '@mui/material';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthProvider';\nimport useSettings from '../hooks/useSettings';\nimport Page from '../components/Page';\nimport SurveyDialog from '../layouts/dashboard/SurveyDialog';\nimport { mapDoc } from './mapFunction';\nimport { StoreContext } from '../store';\nimport { BASE_URL } from '../config';\nimport { setData } from '../store/reducer';\n\nexport default function StorePage() {\n  const AuthData = useContext(AuthContext);\n  const [state, dispatch] = useContext(StoreContext).data;\n  const { themeStretch } = useSettings();\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    if (AuthData.user.uid === undefined) {\n      navigate('/login');\n    }\n    if (AuthData.user.likedDocument !== undefined && AuthData.user.likedDocument.length !== 0) {\n      axios\n        .post(`${BASE_URL}/api/userStore`, {\n          documentsId: AuthData.user.likedDocument\n        })\n        .then((res) => {\n          dispatch(setData(res.data));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    return () => {\n      dispatch(setData([]));\n    };\n  }, [dispatch, AuthData]);\n  let isShowDontHave = false;\n  if (AuthData.user.likedDocument === undefined) {\n    isShowDontHave = true;\n  } else isShowDontHave = AuthData.user.likedDocument.length === 0;\n  return (\n    <Page title=\"User Store | Văn mẫu\">\n      <h1 style={{ marginBottom: '1rem' }}>Kho Luu tru</h1>\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        {/* eslint-disable-next-line no-nested-ternary */}\n        {isShowDontHave ? (\n          <h1>Bạn chưa like văn mẫu nào cả </h1>\n        ) : state.data[0] === undefined ? (\n          <Stack sx={{ color: 'grey.500' }} spacing={2} direction=\"row\" className=\"loading-spinner\">\n            <CircularProgress color=\"secondary\" />\n          </Stack>\n        ) : (\n          state.data.map(mapDoc(expanded, handleChange, AuthData, state))\n        )}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}